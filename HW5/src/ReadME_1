Задание 1.
Представьте, что вы работаете над разработкой простого приложения для записной книжки,
которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов
(юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения.
Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.

Структура:
1. User(name: String, phone: int)
2. UserRepository (List<User>)
3. Пользовательский интерфейс (кнопки: найти контакт, добавить контакт, редактировать контакт, удалить контакт)

Методы:
1. FindUser(String name): List<User>
2. FindUserByPhone(int phone): User
3. AddUser(String name, int phone)
4. DeleteUser(String name)
5. ChangeUser(String name)

Юнит-тесты:
1. FindUserTest
В этом тесте проверяется, что по имени находится нужный контакт и выдается список контактов
по совпадающему имени

2. FindUserByPhoneTest
В этом тесте проверяется, что по номеру телефона выдается контакт

3. AddUserTest
В этом тесте проверяется, что контакт успешно добавляется в адресную книжку

4. DeleteUserTest
В этом тесте проверяется, что контакт успешно удаляется

5. ChangeUserTest
В этом тесте проверяется, что контакт успешно редактируется и изменения отображаются в адресной книжке

Интеграционные тесты:
1.  DuplicateContactTest
Этот тест проверяет,  что при введении в пользовательском интерфейсе данных, которые уже существуют,
выдается о сообщение о дублировании

2.  AddAndShowTest
Этот тест проверяет, что после добавления нового контакта, он корректно отображается в записной книжке

3. FindAndShowTest
Этот тест проверяет, что при поиске контакта по заданным критериям, выборка контактов отображается корректно.

Сквозной тест:
1. CheckAllAplication
Этот тест проверяет всю функциональность записной книжки: добавление, редактирование, поиск и удаление контактов.

